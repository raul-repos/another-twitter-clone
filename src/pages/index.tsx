import { SignInButton, SignOutButton, useUser } from "@clerk/nextjs";
import Head from "next/head";
import { api } from "~/utils/api";
import type { RouterOutputs } from "~/utils/api"
import dayjs from "dayjs";
import relativeTime from 'dayjs/plugin/relativeTime'
import Image from "next/image";

dayjs.extend(relativeTime)

const CreatePostWizard = () => {
  const { user } = useUser()

  if (!user) return null

  console.log(user)
  return (
    <div className="flex w-full gap-3">
      <Image
        src={user.profileImageUrl}
        alt="Profile image"
        className="w-24 h-24 rounded-full"
        width={56}
        height={56}
      />
      <input placeholder="Type some emojis!" className="grow bg-transparent outline-none" />
    </div>
  )
}

type PostWithUser = RouterOutputs["post"]["getAll"][number]
const PostView = (props: PostWithUser) => {
  const { post, author } = props
  return (
    <div key={post.id} className="p-4 border-b border-slate-400 flex gap-3 ">
      <Image
        src={author.profileImageUrl}
        className="w-12 h-12 rounded-full"
        alt={`@${author.username} profile image`}
        width={56}
        height={56}
      />
      <div className="flex flex-col text-slate-400">
        <div className="flex">
          <span>{`@${author.username}‏‏‎ ‎`}</span>
          <span className="font-thin">{`published ${dayjs(post.createdAt).fromNow()}`}</span>
        </div>
        <div>
          {post.content}
        </div>
      </div>
    </div>
  )
}

export default function Home() {
  const user = useUser()

  const { data, isLoading } = api.post.getAll.useQuery()
  console.log(data);

  if (isLoading) return <div>Loading...</div>

  if (!data) return <div>Something went wrong</div>

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex justify-center h-screen">
        <div className=" w-full md:max-w-2xl border-x border-slate-400 h-full">

          <div className="border-b border-slate-400 p-4 flex">
            {!user.isSignedIn && <div className="flex justify-center"><SignInButton /></div>}
            {user.isSignedIn && <div><CreatePostWizard></CreatePostWizard><SignOutButton /></div>}
          </div>
          <div className="flex flex-col">
            {data?.map((post) => <PostView {...post} key={post.post.id} />)}
          </div>
        </div>
      </main>
    </>
  );
}
